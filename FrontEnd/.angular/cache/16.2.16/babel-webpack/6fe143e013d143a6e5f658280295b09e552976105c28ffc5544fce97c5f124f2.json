{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/tooltip\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/icon\";\nfunction ApplicationFormComponent_mat_error_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Name is required.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Max 100 characters allowed.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-error\");\n    i0.ÉµÉµtemplate(1, ApplicationFormComponent_mat_error_11_span_1_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµtemplate(2, ApplicationFormComponent_mat_error_11_span_2_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r0.f[\"applicantName\"].errors == null ? null : ctx_r0.f[\"applicantName\"].errors[\"required\"]);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r0.f[\"applicantName\"].errors == null ? null : ctx_r0.f[\"applicantName\"].errors[\"maxlength\"]);\n  }\n}\nfunction ApplicationFormComponent_mat_error_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Email is required.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Invalid email format.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_16_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Max 100 characters allowed.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-error\");\n    i0.ÉµÉµtemplate(1, ApplicationFormComponent_mat_error_16_span_1_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµtemplate(2, ApplicationFormComponent_mat_error_16_span_2_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµtemplate(3, ApplicationFormComponent_mat_error_16_span_3_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.f[\"email\"].errors == null ? null : ctx_r1.f[\"email\"].errors[\"required\"]);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.f[\"email\"].errors == null ? null : ctx_r1.f[\"email\"].errors[\"email\"]);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.f[\"email\"].errors == null ? null : ctx_r1.f[\"email\"].errors[\"maxlength\"]);\n  }\n}\nfunction ApplicationFormComponent_mat_error_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Resume link is required.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_21_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Max 255 characters allowed.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-error\");\n    i0.ÉµÉµtemplate(1, ApplicationFormComponent_mat_error_21_span_1_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµtemplate(2, ApplicationFormComponent_mat_error_21_span_2_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.f[\"resumeLink\"].errors == null ? null : ctx_r2.f[\"resumeLink\"].errors[\"required\"]);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r2.f[\"resumeLink\"].errors == null ? null : ctx_r2.f[\"resumeLink\"].errors[\"maxlength\"]);\n  }\n}\nfunction ApplicationFormComponent_mat_error_26_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Job ID is required.\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ApplicationFormComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-error\");\n    i0.ÉµÉµtemplate(1, ApplicationFormComponent_mat_error_26_span_1_Template, 2, 0, \"span\", 5);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r3.f[\"jobId\"].errors == null ? null : ctx_r3.f[\"jobId\"].errors[\"required\"]);\n  }\n}\nexport class ApplicationFormComponent {\n  constructor(fb, route, router, http, toastr) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.http = http;\n    this.toastr = toastr;\n    this.isSubmitted = false;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      const jobId = id ? +id : null;\n      this.applicationForm = this.fb.group({\n        applicantName: ['', [Validators.required, Validators.maxLength(100)]],\n        email: ['', [Validators.required, Validators.email, Validators.maxLength(100)]],\n        resumeLink: ['', [Validators.required, Validators.maxLength(255)]],\n        jobId: [{\n          value: jobId,\n          disabled: true\n        }, Validators.required]\n      });\n    });\n  }\n  applyForJob() {\n    if (!this.applicationForm.valid) return;\n    const formValue = this.applicationForm.getRawValue();\n    const applicationData = {\n      applicant_name: formValue.applicantName,\n      email: formValue.email,\n      resume_link: formValue.resumeLink\n    };\n    const jobId = formValue.jobId;\n    const url = `http://localhost:5000/api/applications/jobs/${jobId}/apply`;\n    this.http.post(url, applicationData).subscribe({\n      next: res => {\n        console.log('âœ… Application submitted!', res);\n        this.isSubmitted = true;\n        this.toastr.success('ðŸŽ‰ Application submitted successfully!', 'Success');\n      },\n      error: err => {\n        console.error(' Error submitting:', err);\n        this.toastr.error('Something went wrong. Please try again.');\n      }\n    });\n  }\n  goBack() {\n    this.router.navigate(['/applicant/jobs']);\n  }\n  get f() {\n    return this.applicationForm.controls;\n  }\n  static {\n    this.Éµfac = function ApplicationFormComponent_Factory(t) {\n      return new (t || ApplicationFormComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.ActivatedRoute), i0.ÉµÉµdirectiveInject(i2.Router), i0.ÉµÉµdirectiveInject(i3.HttpClient), i0.ÉµÉµdirectiveInject(i4.ToastrService));\n    };\n  }\n  static {\n    this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: ApplicationFormComponent,\n      selectors: [[\"app-application-form\"]],\n      decls: 30,\n      vars: 7,\n      consts: [[1, \"application-container\", \"mat-elevation-z4\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Go Back\", 3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"id\", \"applicantName\", \"formControlName\", \"applicantName\"], [4, \"ngIf\"], [\"matInput\", \"\", \"id\", \"email\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"id\", \"resume\", \"formControlName\", \"resumeLink\"], [\"matInput\", \"\", \"id\", \"jobId\", \"formControlName\", \"jobId\", \"readonly\", \"\"], [1, \"btn-wrapper\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function ApplicationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ÉµÉµtext(2, \"Apply for a Job\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(3, \"button\", 1);\n          i0.ÉµÉµlistener(\"click\", function ApplicationFormComponent_Template_button_click_3_listener() {\n            return ctx.goBack();\n          });\n          i0.ÉµÉµelementStart(4, \"mat-icon\");\n          i0.ÉµÉµtext(5, \"arrow_back\");\n          i0.ÉµÉµelementEnd()();\n          i0.ÉµÉµelementStart(6, \"form\", 2);\n          i0.ÉµÉµlistener(\"ngSubmit\", function ApplicationFormComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.applyForJob();\n          });\n          i0.ÉµÉµelementStart(7, \"mat-form-field\", 3)(8, \"mat-label\");\n          i0.ÉµÉµtext(9, \"Name\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelement(10, \"input\", 4);\n          i0.ÉµÉµtemplate(11, ApplicationFormComponent_mat_error_11_Template, 3, 2, \"mat-error\", 5);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(12, \"mat-form-field\", 3)(13, \"mat-label\");\n          i0.ÉµÉµtext(14, \"Email\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelement(15, \"input\", 6);\n          i0.ÉµÉµtemplate(16, ApplicationFormComponent_mat_error_16_Template, 4, 3, \"mat-error\", 5);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(17, \"mat-form-field\", 3)(18, \"mat-label\");\n          i0.ÉµÉµtext(19, \"Resume Link\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelement(20, \"input\", 7);\n          i0.ÉµÉµtemplate(21, ApplicationFormComponent_mat_error_21_Template, 3, 2, \"mat-error\", 5);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(22, \"mat-form-field\", 3)(23, \"mat-label\");\n          i0.ÉµÉµtext(24, \"Job ID\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelement(25, \"input\", 8);\n          i0.ÉµÉµtemplate(26, ApplicationFormComponent_mat_error_26_Template, 2, 1, \"mat-error\", 5);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(27, \"div\", 9)(28, \"button\", 10);\n          i0.ÉµÉµtext(29);\n          i0.ÉµÉµelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµadvance(6);\n          i0.ÉµÉµproperty(\"formGroup\", ctx.applicationForm);\n          i0.ÉµÉµadvance(5);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.f[\"applicantName\"].touched && ctx.f[\"applicantName\"].invalid);\n          i0.ÉµÉµadvance(5);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.f[\"email\"].touched && ctx.f[\"email\"].invalid);\n          i0.ÉµÉµadvance(5);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.f[\"resumeLink\"].touched && ctx.f[\"resumeLink\"].invalid);\n          i0.ÉµÉµadvance(5);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.f[\"jobId\"].touched && ctx.f[\"jobId\"].invalid);\n          i0.ÉµÉµadvance(2);\n          i0.ÉµÉµproperty(\"disabled\", !ctx.applicationForm.valid || ctx.isSubmitted);\n          i0.ÉµÉµadvance(1);\n          i0.ÉµÉµtextInterpolate1(\" \", ctx.isSubmitted ? \"Applied\" : \"Apply\", \" \");\n        }\n      },\n      dependencies: [i5.NgIf, i6.MatTooltip, i7.MatButton, i7.MatIconButton, i8.MatInput, i9.MatFormField, i9.MatLabel, i9.MatError, i10.MatIcon, i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".application-container[_ngcontent-%COMP%] {\\n    max-width: 500px;\\n    margin: 40px auto;\\n    padding: 30px;\\n    border-radius: 8px;\\n    background-color: #fff;\\n  }\\n  \\n  h2[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 20px;\\n    color: #3f51b5;\\n  }\\n  \\n  .full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-bottom: 16px;\\n  }\\n  \\n  .btn-wrapper[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-top: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hcHBsaWNhdGlvbi1mb3JtL2FwcGxpY2F0aW9uLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGdCQUFnQjtFQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHBsaWNhdGlvbi1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogNDBweCBhdXRvO1xyXG4gICAgcGFkZGluZzogMzBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgfVxyXG4gIFxyXG4gIGgyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBjb2xvcjogIzNmNTFiNTtcclxuICB9XHJcbiAgXHJcbiAgLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gIH1cclxuICBcclxuICAuYnRuLXdyYXBwZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµtemplate","ApplicationFormComponent_mat_error_11_span_1_Template","ApplicationFormComponent_mat_error_11_span_2_Template","ÉµÉµadvance","ÉµÉµproperty","ctx_r0","f","errors","ApplicationFormComponent_mat_error_16_span_1_Template","ApplicationFormComponent_mat_error_16_span_2_Template","ApplicationFormComponent_mat_error_16_span_3_Template","ctx_r1","ApplicationFormComponent_mat_error_21_span_1_Template","ApplicationFormComponent_mat_error_21_span_2_Template","ctx_r2","ApplicationFormComponent_mat_error_26_span_1_Template","ctx_r3","ApplicationFormComponent","constructor","fb","route","router","http","toastr","isSubmitted","ngOnInit","paramMap","subscribe","params","id","get","jobId","applicationForm","group","applicantName","required","maxLength","email","resumeLink","value","disabled","applyForJob","valid","formValue","getRawValue","applicationData","applicant_name","resume_link","url","post","next","res","console","log","success","error","err","goBack","navigate","controls","ÉµÉµdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","HttpClient","i4","ToastrService","selectors","decls","vars","consts","template","ApplicationFormComponent_Template","rf","ctx","ÉµÉµlistener","ApplicationFormComponent_Template_button_click_3_listener","ApplicationFormComponent_Template_form_ngSubmit_6_listener","ÉµÉµelement","ApplicationFormComponent_mat_error_11_Template","ApplicationFormComponent_mat_error_16_Template","ApplicationFormComponent_mat_error_21_Template","ApplicationFormComponent_mat_error_26_Template","touched","invalid","ÉµÉµtextInterpolate1"],"sources":["C:\\Users\\nithe\\Matrimorphosis\\Job_Portal\\FrontEnd\\src\\app\\components\\application-form\\application-form.component.ts","C:\\Users\\nithe\\Matrimorphosis\\Job_Portal\\FrontEnd\\src\\app\\components\\application-form\\application-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-application-form',\r\n  templateUrl: './application-form.component.html',\r\n  styleUrls: ['./application-form.component.css']\r\n})\r\nexport class ApplicationFormComponent implements OnInit {\r\n  applicationForm!: FormGroup;\r\n  isSubmitted = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const id = params.get('id');\r\n      const jobId = id ? +id : null;\r\n\r\n      this.applicationForm = this.fb.group({\r\n        applicantName: ['', [Validators.required, Validators.maxLength(100)]],\r\n        email: ['', [Validators.required, Validators.email, Validators.maxLength(100)]],\r\n        resumeLink: ['', [Validators.required, Validators.maxLength(255)]],\r\n        jobId: [{ value: jobId, disabled: true }, Validators.required]\r\n      });\r\n    });\r\n  }\r\n\r\n  applyForJob() {\r\n    if (!this.applicationForm.valid) return;\r\n\r\n    const formValue = this.applicationForm.getRawValue();\r\n\r\n    const applicationData = {\r\n      applicant_name: formValue.applicantName,\r\n      email: formValue.email,\r\n      resume_link: formValue.resumeLink\r\n    };\r\n\r\n    const jobId = formValue.jobId;\r\n\r\n    const url = `http://localhost:5000/api/applications/jobs/${jobId}/apply`;\r\n\r\n    this.http.post(url, applicationData).subscribe({\r\n      next: res => {\r\n        console.log('âœ… Application submitted!', res);\r\n        this.isSubmitted = true;\r\n        this.toastr.success('ðŸŽ‰ Application submitted successfully!', 'Success');\r\n      },\r\n      error: err => {\r\n        console.error(' Error submitting:', err);\r\n        this.toastr.error('Something went wrong. Please try again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/applicant/jobs']);\r\n  }\r\n\r\n  get f() {\r\n    return this.applicationForm.controls;\r\n  }\r\n}","<div class=\"application-container mat-elevation-z4\">\r\n  <h2>Apply for a Job</h2>\r\n\r\n  <!-- Go Back Icon Button -->\r\n  <button mat-icon-button color=\"primary\" (click)=\"goBack()\" matTooltip=\"Go Back\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n\r\n  <form [formGroup]=\"applicationForm\" (ngSubmit)=\"applyForJob()\">\r\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n      <mat-label>Name</mat-label>\r\n      <input matInput id=\"applicantName\" formControlName=\"applicantName\" />\r\n      <mat-error *ngIf=\"f['applicantName'].touched && f['applicantName'].invalid\">\r\n        <span *ngIf=\"f['applicantName'].errors?.['required']\">Name is required.</span>\r\n        <span *ngIf=\"f['applicantName'].errors?.['maxlength']\">Max 100 characters allowed.</span>\r\n      </mat-error>\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput id=\"email\" formControlName=\"email\" />\r\n      <mat-error *ngIf=\"f['email'].touched && f['email'].invalid\">\r\n        <span *ngIf=\"f['email'].errors?.['required']\">Email is required.</span>\r\n        <span *ngIf=\"f['email'].errors?.['email']\">Invalid email format.</span>\r\n        <span *ngIf=\"f['email'].errors?.['maxlength']\">Max 100 characters allowed.</span>\r\n      </mat-error>\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n      <mat-label>Resume Link</mat-label>\r\n      <input matInput id=\"resume\" formControlName=\"resumeLink\" />\r\n      <mat-error *ngIf=\"f['resumeLink'].touched && f['resumeLink'].invalid\">\r\n        <span *ngIf=\"f['resumeLink'].errors?.['required']\">Resume link is required.</span>\r\n        <span *ngIf=\"f['resumeLink'].errors?.['maxlength']\">Max 255 characters allowed.</span>\r\n      </mat-error>\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n      <mat-label>Job ID</mat-label>\r\n      <input matInput id=\"jobId\" formControlName=\"jobId\" readonly />\r\n      <mat-error *ngIf=\"f['jobId'].touched && f['jobId'].invalid\">\r\n        <span *ngIf=\"f['jobId'].errors?.['required']\">Job ID is required.</span>\r\n      </mat-error>\r\n    </mat-form-field>\r\n    \r\n\r\n    <div class=\"btn-wrapper\">\r\n      <button mat-raised-button color=\"primary\" type=\"submit\"\r\n              [disabled]=\"!applicationForm.valid || isSubmitted\">\r\n        {{ isSubmitted ? 'Applied' : 'Apply' }}\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}